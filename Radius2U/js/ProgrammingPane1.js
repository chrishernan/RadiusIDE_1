// Generated by CoffeeScript 1.6.3
(function() {
  $('#ProgrammingPane').click(function(event) {
    $(".selected").removeClass("selected");
    return $('#popupmenu').hide();
  });

  $('body').keydown(function(event) {
    if (event.which === 46 || event.which === 8) {
      return deleteTheseSuckers($(".draggable2.selected"));
    }
  });

  $('#ProgrammingPane').on("keydown", "div.editable", function(event) {
    if (event.which === 10 || event.which === 13) {
      event.preventDefault();
    }
    return event.stopPropagation();
  });

  /*
  	$('#ProgrammingPane').on "keypress", "div.editable", (event) -> 
  		console.log('keypress which', event.which,
  			'text', $(event.target).text(), 'html', $(event.target).html()) 
  	$('#ProgrammingPane').on "keyup", "div.editable", (event) -> 
  		console.log('keyup which', event.which,
  			'text', $(event.target).text(), 'html', $(event.target).html()) 
  		#if event.which == 60  # <
  		#	console.log('text', $(event.target).text(), 'html', $(event.target).html()) 
  			#event.preventDefault()
  			# need to allow default and later change < to &lt;
  		#if event.which == 38  # &
  		#	event.preventDefault()
  */


  $('#ProgrammingPane').on("keyup", "div.errorParm", function(event) {
    return clearErrors(true);
  });

  $('#ProgrammingPane').on("keyup", ".editable", function(event) {
    var boxmax, boxmin, newwidth;
    $("#widthAux").html($(event.target).text());
    boxmin = $(event.target).attr('minwidth');
    boxmax = $(event.target).attr('maxwidth');
    newwidth = Math.max(boxmin, $('#widthAux').width() + 10);
    newwidth = Math.min(boxmax, newwidth);
    return $(event.target).width(newwidth);
  });

  $('#ProgrammingPane').on("mousedown", ".draghandle", function(event) {
    var clickToSelect;
    clearErrors(true);
    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {
      if ($(this).parent().hasClass("selected")) {
        clickToSelect = false;
      }
      return doPopup(this, event);
    }
  });

  $('#ProgrammingPane').on("keyup", "*", function(event) {
    $('#contextmenu').remove();
    $('#ProgrammingPane').on("keyup", function(event) {
      return $('#contextmenu').remove();
    });
    return $('body').on("keyup", function(event) {
      return $('#contextmenu').remove();
    });
  });

  $('#ProgrammingPane').on("click", ".draghandle", function(event) {
    var clickToSelect, lastDraggedDiv, parentDiv;
    event.stopPropagation();
    if (!clickToSelect) {
      clickToSelect = true;
      return;
    }
    $(".selected").removeClass("selected");
    parentDiv = $(event.target).parent();
    if (parentDiv === lastDraggedDiv) {
      lastDraggedDiv = null;
      return;
    }
    parentDiv.addClass('selected');
    if (exists(parentDiv, "rad-end")) {
      return $("#" + parentDiv.attr("rad-end")).addClass('selected');
    }
  });

  $('#ProgrammingPane').on("dblclick", ".draghandle", function(event) {
    var child, lastDraggedDiv, parentDiv, _i, _len, _ref, _results;
    event.stopPropagation();
    $(".selected").removeClass("selected");
    parentDiv = $(event.target).parent();
    if (parentDiv === lastDraggedDiv) {
      lastDraggedDiv = null;
      return;
    }
    _ref = Radius.getAttachedDivs(parentDiv);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      child = _ref[_i];
      console.log("attached div", child);
      _results.push(child.addClass('selected'));
    }
    return _results;
  });

  $('#ProgrammingPane').on("blur", ".ASSIGN > .parm", function(event) {
    var varName;
    return varName = $(event.target).text();
  });

}).call(this);
